warning: in the working copy of 'README.md', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'app.py', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'docker-compose.yml', LF will be replaced by CRLF the next time Git touches it
[1mdiff --git a/.gitignore b/.gitignore[m
[1mindex ba41650..ef1c82f 100644[m
[1m--- a/.gitignore[m
[1m+++ b/.gitignore[m
[36m@@ -24,6 +24,9 @@[m [mvar/[m
 venv/[m
 ENV/[m
 [m
[32m+[m[32m# Environment variables[m
[32m+[m[32m.env[m
[32m+[m
 # Database[m
 *.db[m
 *.sqlite3[m
[36m@@ -31,6 +34,10 @@[m [mENV/[m
 # Logs[m
 *.log[m
 [m
[32m+[m[32m# Docker volumes[m
[32m+[m[32mmosquitto_data/[m
[32m+[m[32mmosquitto_log/[m
[32m+[m
 # OS specific[m
 .DS_Store[m
 .DS_Store?[m
[1mdiff --git a/README.md b/README.md[m
[1mindex f9a7ecf..00c5532 100644[m
[1m--- a/README.md[m
[1m+++ b/README.md[m
[36m@@ -132,12 +132,31 @@[m [mThe Flask API provides the following endpoints:[m
 [m
 ### Environment Variables[m
 [m
[31m-The following environment variables can be configured in the `docker-compose.yml` file:[m
[32m+[m[32mThe following environment variables can be configured in the `.env` file:[m
 [m
 - `MQTT_BROKER`: MQTT broker address (default: mosquitto)[m
 - `MQTT_PORT`: MQTT broker port (default: 1883)[m
 - `API_BASE_URL`: Flask API base URL (default: http://app:5000)[m
 - `DEEPSEEK_API_URL`: DeepSeek API URL (default: http://host.docker.internal:11434/api/chat)[m
[32m+[m[32m- `CLOUDFLARE_TUNNEL_TOKEN`: Your Cloudflare Zero Trust Tunnel token (required for the cloudflared service)[m
[32m+[m
[32m+[m[32mTo set up the environment variables:[m
[32m+[m[32m1. Copy the example environment file: `cp .env.example .env`[m
[32m+[m[32m2. Edit the `.env` file and add your Cloudflare tunnel token[m
[32m+[m
[32m+[m[32m### Cloudflare Zero Trust Tunnel[m
[32m+[m
[32m+[m[32mThe application includes a Cloudflare Zero Trust Tunnel for secure remote access. This allows you to:[m
[32m+[m[32m- Access your application securely from anywhere without exposing ports directly to the internet[m
[32m+[m[32m- Benefit from Cloudflare's security features like DDoS protection[m
[32m+[m[32m- Apply access policies to control who can reach your services[m
[32m+[m
[32m+[m[32mTo use the Cloudflare tunnel:[m
[32m+[m[32m1. Create a tunnel in the Cloudflare Zero Trust dashboard[m
[32m+[m[32m2. Get your tunnel token and add it to the `.env` file[m
[32m+[m[32m3. Start the application with `docker-compose up -d`[m
[32m+[m
[32m+[m[32m**Important:** Never commit your `.env` file to version control. The `.gitignore` file is configured to exclude it.[m
 [m
 ### DeepSeek Configuration[m
 [m
[36m@@ -264,6 +283,28 @@[m [mcurl -X POST http://localhost:5000/cleanup-duplicates[m
    - The system has been updated to prevent new duplicates from being created when fetching data from the GBF Wiki.[m
    - If duplicates persist after cleanup, please check for any custom scripts or processes that might be inserting data without duplicate checking.[m
 [m
[32m+[m[32m9. Cloudflare Zero Trust Tunnel issues:[m
[32m+[m[32m   - To check if the cloudflared tunnel is running properly:[m
[32m+[m[32m     ```bash[m
[32m+[m[32m     docker-compose logs cloudflared[m
[32m+[m[32m     ```[m
[32m+[m[32m   - You should see messages like "Connection registered successfully" and "Route propagating" if the tunnel is working correctly.[m
[32m+[m[32m   - To test connectivity through the tunnel:[m
[32m+[m[32m     1. Log into your Cloudflare Zero Trust dashboard (https://one.dash.cloudflare.com/)[m
[32m+[m[32m     2. Navigate to Access > Tunnels[m
[32m+[m[32m     3. Find your tunnel in the list and check its status (should be "Active")[m
[32m+[m[32m     4. Click on your tunnel name to view details[m
[32m+[m[32m     5. Under the "Public Hostnames" tab, you'll see the URLs that are routed through your tunnel[m
[32m+[m[32m     6. Open one of these URLs in your browser to test if the service is accessible[m
[32m+[m[32m   - If the tunnel isn't connecting:[m
[32m+[m[32m     - Verify your token is correct in the `.env` file[m
[32m+[m[32m     - Check that the cloudflared service can reach the Cloudflare network (no firewall blocking outbound connections)[m
[32m+[m[32m     - Ensure the token hasn't expired or been revoked in the Cloudflare dashboard[m
[32m+[m[32m   - For detailed tunnel diagnostics:[m
[32m+[m[32m     ```bash[m
[32m+[m[32m     docker-compose exec cloudflared cloudflared tunnel info[m
[32m+[m[32m     ```[m
[32m+[m
 ## Testing[m
 [m
 For comprehensive testing instructions, please refer to [testing.txt](testing.txt). This document includes detailed testing procedures for:[m
[1mdiff --git a/docker-compose.yml b/docker-compose.yml[m
[1mindex 30ec04f..a17a121 100644[m
[1m--- a/docker-compose.yml[m
[1m+++ b/docker-compose.yml[m
[36m@@ -1,4 +1,3 @@[m
[31m-[m
 services:[m
   app:[m
     build: .[m
[36m@@ -30,6 +29,17 @@[m [mservices:[m
       - gbf_network[m
     restart: unless-stopped[m
 [m
[32m+[m[32m  cloudflared:[m
[32m+[m[32m    image: cloudflare/cloudflared:latest[m
[32m+[m[32m    command: tunnel --no-autoupdate run --token ${CLOUDFLARE_TUNNEL_TOKEN} --url http://app:5000[m
[32m+[m[32m    environment:[m
[32m+[m[32m      - CLOUDFLARE_TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}[m
[32m+[m[32m    networks:[m
[32m+[m[32m      - gbf_network[m
[32m+[m[32m    restart: unless-stopped[m
[32m+[m[32m    depends_on:[m
[32m+[m[32m      - app[m
[32m+[m
 networks:[m
   gbf_network:[m
     driver: bridge[m
